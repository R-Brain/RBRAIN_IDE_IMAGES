package "foreign" "0.8.66" {
	var ".__NAMESPACE__."
	var ".__S3MethodsTable__."
	var ".noGenerics"
	function ".onLoad"("lib", "pkg")
	function ".onUnload"("libpath")
	var ".packageName"
	function "adQuote"("x")
	/**
	 * 
	 * Reads binary data files or \code{data.dump} files that were produced
	 * in S version 3.
	 *
	 */
	exported function "data.restore"("file", "print"="FALSE", "verbose"="FALSE", "env")
	var "do_read_SPSS"
	var "do_readStata"
	var "do_writeStata"
	var "DoWritedbf"
	function "ISO_8601_to_POSIX_datetime_format"("x")
	/**
	 * 
	 * Scans a file as a SAS XPORT format library and returns a list
	 * containing information about the SAS library.
	 *
	 */
	exported function "lookup.xport"("file")
	function "make.SAS.formats"("varnames")
	function "make.SAS.names"("varnames", "validvarname"="c(\"V7\", \"V6\")")
	function "nam.or.i"("nam", "i")
	var "Rdbfread"
	var "read_mtp"
	/**
	 * 
	 * Reads data from Weka Attribute-Relation File Format (ARFF) files.
	 *
	 */
	exported function "read.arff"("file")
	/**
	 * 
	 * The function reads a DBF file into a data frame, converting character
	 * fields to factors, and trying to respect NULL fields.
	 *
	 * The DBF format is documented but not much adhered to.  There is is no
	 * guarantee this will read all DBF files.
	 *
	 */
	exported function "read.dbf"("file", "as.is"="FALSE")
	/**
	 * 
	 * Reads a file in Stata version 5--12 binary format into a data frame. 
	 * 
	 * Frozen: will not support Stata formats after 12.
	 *
	 */
	exported function "read.dta"("file", "convert.dates"="TRUE", "convert.factors"="TRUE", "missing.type"="FALSE", "convert.underscore"="FALSE", "warn.missing.labels"="TRUE")
	/**
	 * 
	 * Reads data files in the \code{.REC} format used by Epi Info versions 6
	 * and earlier and by EpiData.  Epi Info is a public domain database and
	 * statistics package produced by the US Centers for Disease Control
	 * and EpiData is a freely available data entry and validation system.
	 * 
	 */
	exported function "read.epiinfo"("file", "read.deleted"="FALSE", "guess.broken.dates"="FALSE", "thisyear"="", "lower.case.names"="FALSE")
	/**
	 * 
	 * Return a list with the data stored in a file as a Minitab Portable
	 * Worksheet.
	 *
	 */
	exported function "read.mtp"("file")
	/**
	 * 
	 * Read a file in Octave text data format into a list.
	 *
	 */
	exported function "read.octave"("file")
	/**
	 * 
	 * Reads binary data files or \code{data.dump} files that were produced
	 * in S version 3.
	 *
	 */
	exported function "read.S"("file")
	/**
	 * 
	 * \code{read.spss} reads a file stored by the SPSS \code{save} or
	 * \code{export} commands.
	 *
	 * This was orignally written in 2000 and has limited support for changes
	 * in SPSS formats since (which have not been many).
	 *
	 */
	exported function "read.spss"("file", "use.value.labels"="TRUE", "to.data.frame"="FALSE", "max.value.labels"="Inf", "trim.factor.names"="FALSE", "trim_values"="TRUE", "reencode"="NA", "use.missings")
	/**
	 * 
	 * Generates a SAS program to convert the ssd contents to SAS transport format
	 * and then uses \code{read.xport} to obtain a data frame.
	 *
	 */
	exported function "read.ssd"("libname", "sectionnames", "tmpXport"="tempfile()", "tmpProgLoc"="tempfile()", "sascmd"="sas")
	/**
	 * 
	 * \code{read.systat} reads a rectangular data file stored by the Systat
	 * \code{SAVE} command as (legacy) \code{*.sys} or more recently
	 * \code{*.syd} files.
	 *
	 */
	exported function "read.systat"("file", "to.data.frame"="TRUE")
	/**
	 * 
	 * Reads a file as a SAS XPORT format library and returns a list of
	 * data.frames.
	 *
	 */
	exported function "read.xport"("file")
	var "readSystat"
	var "SModeNames"
	var "spss_init"
	/**
	 * 
	 * Writes data into Weka Attribute-Relation File Format (ARFF) files.
	 *
	 */
	exported function "write.arff"("x", "file", "eol"="
", "relation"="deparse(substitute(x))")
	/**
	 * 
	 * The function tries to write a data frame to a DBF file.
	 *
	 */
	exported function "write.dbf"("dataframe", "file", "factor2char"="TRUE", "max_nchar"="254")
	/**
	 * 
	 * Writes the data frame to file in the Stata binary
	 * format.  Does not write array variables unless they can be
	 * \code{\link{drop}}-ed to a vector.
	 *
	 * Frozen: will not support Stata formats after 10 (also used by Stata 11).
	 *
	 */
	exported function "write.dta"("dataframe", "file", "version"="7", "convert.dates"="TRUE", "tz"="GMT", "convert.factors"="c(\"labels\", \"string\", \"numeric\", \"codes\")")
	/**
	 * 
	 *This function exports simple data frames to other statistical packages by
	 *writing the data as free-format text and writing a separate file of
	 *instructions for the other package to read the data. 
	 *
	 */
	exported function "write.foreign"("df", "datafile", "codefile", "package"="c(\"SPSS\", \"Stata\", \"SAS\")", "...")
	function "writeForeignSAS"("df", "datafile", "codefile", "dataname"="rdata", "validvarname"="c(\"V7\", \"V6\")", "libpath"="")
	function "writeForeignSPSS"("df", "datafile", "codefile", "varnames"="")
	function "writeForeignStata"("df", "datafile", "codefile")
	var "xport_info"
	var "xport_read"
}
